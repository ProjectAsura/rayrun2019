//-----------------------------------------------------------------------------
// File : dll_main.cpp
// Desc : DLL Main Entry Point.
// Copyright(c) Project Asura. All right reserved.
//-----------------------------------------------------------------------------

#define WIN32_LEAN_AND_MEAN
#define NOMINMAX

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <cstdint>
#include <Windows.h>
#include "../../src/rayrun.hpp"


//-----------------------------------------------------------------------------
//      DLLメインエントリーポイントです.
//-----------------------------------------------------------------------------
BOOL APIENTRY DllMain(HMODULE, DWORD, LPVOID)
{ return TRUE; }


//-----------------------------------------------------------------------------
//      競技で定められている事前処理関数(スレッドによる規定は書いてない).
//-----------------------------------------------------------------------------
void preprocess
(
    const float*    vertices,       // 頂点座標配列.
    size_t          verticeCount,   // 頂点数.
    const float*    normals,        // 法線配列.
    size_t          normalCount,    // 法線数.
    const uint32_t* indices,        // 頂点インデックス(v0, n0, v1, n1, v2, n2...のように格納される, また三角形はすでに行われているものとする).
    size_t          faceCount       // 頂点インデックス数.
)
{
}

//------------------------------------------------------------------------------
//      競技で定められている交差判定関数(マルチスレッドで呼び出される).
//------------------------------------------------------------------------------
void intersect
(
    Ray*    rays,           // レイ配列.
    size_t  rayCount,       // レイ数.
    bool    hitAny          // 交差が1つ以上あることがあ確定した段階で戻るか?
)
{
    // 交差したら ray.isisect = true.のようにする.
}